basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  store.Product:
    properties:
      Code:
        description: Ze product code
        example: X909
        type: string
      Price:
        description: No decimals for now
        example: 99
        type: integer
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      id:
        type: integer
      updatedAt:
        type: string
    required:
    - Code
    type: object
  store.ResponseMessage:
    properties:
      Code:
        type: string
      Message:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: odjhey@gmail.com
  description: sampol
  title: ze golang api
  version: "1.0"
paths:
  /api/product:
    post:
      consumes:
      - application/json
      description: Create product
      parameters:
      - description: input payload
        in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/store.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/store.Product'
      summary: Create product
      tags:
      - product
  /api/product/{code}:
    post:
      consumes:
      - application/json
      description: Get 1 product
      parameters:
      - description: product code
        in: path
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/store.Product'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/store.ResponseMessage'
      summary: Read 1 product
      tags:
      - product
  /api/products:
    get:
      consumes:
      - application/json
      description: Get details of all products
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/store.Product'
            type: array
      summary: Get details of all products
      tags:
      - product
swagger: "2.0"
